#!/Users/admiralbolt/miniconda3/envs/yuh/bin/python

import argparse
import cv2

from vis.lib import image_utils, video_utils

def rainbow_edge_callback(frame):
  return image_utils.get_canny_edges(frame)

def stained_glass_callback(frame):
  dt = image_utils.get_delaunay_triangulation(frame.shape[1], frame.shape[0], seed=5)
  return image_utils.stained_glass(frame, dt)

if __name__ == "__main__":
  parser = argparse.ArgumentParser(description="Video filtering swiss army knife.")
  parser.add_argument("--input", help="Path to input video (should be mp4).", required=True)
  parser.add_argument("--output", help="Path to output video (should be mp4).", required=True)
  parser.add_argument("--filter", help="Which filter to apply.", choices=image_utils.FILTERS, required=True)
  parser.add_argument("--debug", default=False, action="store_true", help="Print more info!")
  args = parser.parse_args()

  callbacks = {
    "rainbow_edge": rainbow_edge_callback,
    "stained_glass": stained_glass_callback
  }

  video_utils.frame_by_frame_process(args.input, args.output, callbacks[args.filter], debug=args.debug)